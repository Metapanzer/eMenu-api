definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Category:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      name:
        maxLength: 100
        minLength: 3
        type: string
      updatedAt:
        type: string
    required:
    - name
    type: object
  models.CategoryInput:
    properties:
      name:
        maxLength: 100
        minLength: 3
        type: string
    required:
    - name
    type: object
  models.Item:
    properties:
      category_id:
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
      updatedAt:
        type: string
    type: object
  models.ItemInput:
    properties:
      category_id:
        type: integer
      description:
        type: string
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  models.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  models.Order:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      order_status:
        type: string
      updatedAt:
        type: string
      userID:
        type: string
    type: object
  models.OrderUpdateInput:
    properties:
      order_status:
        type: string
    type: object
  models.RegisterInput:
    properties:
      email:
        type: string
      name:
        maxLength: 45
        minLength: 3
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  models.Review:
    properties:
      comment:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      item_id:
        type: integer
      rating:
        maximum: 5
        minimum: 1
        type: integer
      updatedAt:
        type: string
      user_id:
        type: string
    required:
    - rating
    type: object
  models.ReviewInput:
    properties:
      comment:
        type: string
      item_id:
        type: integer
      rating:
        maximum: 5
        minimum: 1
        type: integer
      user_id:
        type: string
    required:
    - rating
    type: object
  models.ReviewUpdateInput:
    properties:
      comment:
        type: string
      rating:
        maximum: 5
        minimum: 1
        type: integer
    required:
    - rating
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /category:
    get:
      consumes:
      - application/json
      description: Get a list of Category.
      parameters:
      - description: category search by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      summary: Get all Item Category.
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Add a new category, This endpoint requires an admin role. The role
        is checked based on the user's token.
      parameters:
      - description: the body to add a category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.CategoryInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      security:
      - BearerToken: []
      summary: Insert Item Category.
      tags:
      - Category
  /category/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one category, This endpoint requires an admin role. The
        role is checked based on the user's token.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      security:
      - BearerToken: []
      summary: Delete Item Category.
      tags:
      - Category
    patch:
      consumes:
      - application/json
      description: Update existing category, This endpoint requires an admin role.
        The role is checked based on the user's token.
      parameters:
      - description: the body to update category
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.CategoryInput'
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Category'
            type: array
      security:
      - BearerToken: []
      summary: Update Item Category.
      tags:
      - Category
  /category/{id}/item:
    get:
      consumes:
      - application/json
      description: Get all item by Category ID.
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      summary: Get all Item on specific Category.
      tags:
      - Item
  /item:
    get:
      consumes:
      - application/json
      description: Get a list of item.
      parameters:
      - description: item search by name
        in: query
        name: name
        type: string
      - description: page number
        in: query
        name: page
        type: integer
      - description: items per page
        in: query
        name: limit
        type: integer
      - description: field to sort by
        in: query
        name: sortBy
        type: string
      - description: 'sort order: ''asc'' or ''desc'''
        in: query
        name: orderBy
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      summary: Get all Item menu.
      tags:
      - Item
    post:
      consumes:
      - application/json
      description: Add a new item menu, This endpoint requires an admin role. The
        role is checked based on the user's token.
      parameters:
      - description: the body to add an item menu
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.ItemInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      security:
      - BearerToken: []
      summary: Insert Item Menu.
      tags:
      - Item
  /item/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one item, This endpoint requires an admin role. The role
        is checked based on the user's token.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      security:
      - BearerToken: []
      summary: Delete Item Menu.
      tags:
      - Item
    patch:
      consumes:
      - application/json
      description: Update existing item, This endpoint requires an admin role. The
        role is checked based on the user's token.
      parameters:
      - description: the body to update item
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.ItemInput'
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Item'
            type: array
      security:
      - BearerToken: []
      summary: Update Item Menu.
      tags:
      - Item
  /item/{id}/review:
    get:
      consumes:
      - application/json
      description: Get all review by item ID.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all review on specific item.
      tags:
      - Review
  /login:
    post:
      consumes:
      - application/json
      description: Logging in to get jwt token to access admin or user api by roles.
      parameters:
      - description: the body to login a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: User login
      tags:
      - Auth
  /order:
    post:
      consumes:
      - application/json
      description: Add new order, This endpoint requires user role. The role is checked
        based on the user's token.
      parameters:
      - description: the body to add an order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      security:
      - BearerToken: []
      summary: Insert new order.
      tags:
      - Order
  /order/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one user order, This endpoint requires user role. The role
        is checked based on the user's token.
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      security:
      - BearerToken: []
      summary: Delete user order.
      tags:
      - Order
    patch:
      consumes:
      - application/json
      description: Update existing user order, This endpoint requires user role. The
        role is checked based on the user's token.
      parameters:
      - description: the body to update order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.OrderUpdateInput'
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
      security:
      - BearerToken: []
      summary: Update user order.
      tags:
      - Order
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided information
      parameters:
      - description: the body to register a user
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - Auth
  /review:
    post:
      consumes:
      - application/json
      description: Add new item review, This endpoint requires user role. The role
        is checked based on the user's token.
      parameters:
      - description: the body to add a review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.ReviewInput'
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      security:
      - BearerToken: []
      summary: Insert Item Review.
      tags:
      - Review
  /review/{id}:
    delete:
      consumes:
      - application/json
      description: Delete one review, This endpoint requires user role. The role is
        checked based on the user's token.
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      security:
      - BearerToken: []
      summary: Delete Item review.
      tags:
      - Review
    patch:
      consumes:
      - application/json
      description: Update existing user review, This endpoint requires user role.
        The role is checked based on the user's token.
      parameters:
      - description: the body to update review
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.ReviewUpdateInput'
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Authorization. How to input in swagger : ''Bearer <insert_your_token_here>'''
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      security:
      - BearerToken: []
      summary: Update user review.
      tags:
      - Review
swagger: "2.0"
